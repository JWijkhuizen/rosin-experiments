PackageSet { package { 
  CatkinPackage package_name { artifact {
    Artifact /robot_state_publisher {
      node Node { name /robot_state_publisher

        subscriber {
          Subscriber { name '/joint_states' message 'sensor_msgs.JointState'}}}},
    Artifact /cmd_vel_relay {
      node Node { name /cmd_vel_relay

        subscriber {
          Subscriber { name '/cmd_vel' message 'geometry_msgs.Twist'}}}},
    Artifact /gazebo_gui {
      node Node { name /gazebo_gui
}},
    Artifact /ekf_localization {
      node Node { name /ekf_localization

        serviceserver {
          ServiceServer { name '/ekf_localization/enable' service 'std_srvs.Empty'},
          ServiceServer { name '/ekf_localization/toggle' service 'robot_localization.ToggleFilterProcessing'},
          ServiceServer { name '/set_pose' service 'robot_localization.SetPose'}}
        publisher {
          Publisher { name '/diagnostics' message 'diagnostic_msgs.DiagnosticArray'},
          Publisher { name '/odometry/filtered' message 'nav_msgs.Odometry'}}
        subscriber {
          Subscriber { name '/imu/data' message 'sensor_msgs.Imu'},
          Subscriber { name '/set_pose' message 'geometry_msgs.PoseWithCovarianceStamped'},
          Subscriber { name '/ridgeback_velocity_controller/odom' message 'nav_msgs.Odometry'}}}},
    Artifact /controller_spawner {
      node Node { name /controller_spawner
}},
    Artifact /move_base {
      node Node { name /move_base

        serviceserver {
          ServiceServer { name '/move_base/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/make_plan' service 'nav_msgs.GetPlan'},
          ServiceServer { name '/move_base/global_costmap/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/global_costmap/obstacles_layer/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/local_costmap/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/global_costmap/inflater_layer/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/local_costmap/inflater_layer/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/clear_costmaps' service 'std_srvs.Empty'},
          ServiceServer { name '/move_base/local_costmap/obstacles_layer/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/TrajectoryPlannerROS/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/move_base/NavfnROS/make_plan' service 'nav_msgs.GetPlan'}}
        publisher {
          Publisher { name '/move_base/local_costmap/obstacles_layer/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/TrajectoryPlannerROS/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/global_costmap/obstacles_layer/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/local_costmap/costmap_updates' message 'map_msgs.OccupancyGridUpdate'},
          Publisher { name '/move_base/global_costmap/costmap' message 'nav_msgs.OccupancyGrid'},
          Publisher { name '/move_base/NavfnROS/plan' message 'nav_msgs.Path'},
          Publisher { name '/move_base/global_costmap/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/local_costmap/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/TrajectoryPlannerROS/local_plan' message 'nav_msgs.Path'},
          Publisher { name '/move_base/global_costmap/costmap_updates' message 'map_msgs.OccupancyGridUpdate'},
          Publisher { name '/move_base/global_costmap/obstacles_layer/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/TrajectoryPlannerROS/global_plan' message 'nav_msgs.Path'},
          Publisher { name '/move_base/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/local_costmap/inflater_layer/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/local_costmap/footprint' message 'geometry_msgs.PolygonStamped'},
          Publisher { name '/cmd_vel' message 'geometry_msgs.Twist'},
          Publisher { name '/move_base/current_goal' message 'geometry_msgs.PoseStamped'},
          Publisher { name '/move_base/global_costmap/inflater_layer/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/local_costmap/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/local_costmap/obstacles_layer/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/global_costmap/footprint' message 'geometry_msgs.PolygonStamped'},
          Publisher { name '/move_base/global_costmap/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/TrajectoryPlannerROS/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/goal' message 'move_base_msgs.MoveBaseActionGoal'},
          Publisher { name '/move_base/TrajectoryPlannerROS/cost_cloud' message 'sensor_msgs.PointCloud2'},
          Publisher { name '/move_base/global_costmap/inflater_layer/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/move_base/local_costmap/inflater_layer/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/move_base/local_costmap/costmap' message 'nav_msgs.OccupancyGrid'}}
        subscriber {
          Subscriber { name '/odometry/filtered' message 'nav_msgs.Odometry'},
          Subscriber { name '/front/scan' message 'sensor_msgs.LaserScan'},
          Subscriber { name '/move_base/global_costmap/footprint' message 'geometry_msgs.PolygonStamped'},
          Subscriber { name '/move_base/local_costmap/footprint' message 'geometry_msgs.PolygonStamped'},
          Subscriber { name '/move_base_simple/goal' message 'geometry_msgs.PoseStamped'}}
        actionserver {
          ActionServer { name '/move_base/' action 'move_base_msgs.MoveBase'}}}},
    Artifact /gazebo {
      node Node { name /gazebo

        serviceserver {
          ServiceServer { name '/gazebo/clear_joint_forces' service 'gazebo_msgs.JointRequest'},
          ServiceServer { name '/gazebo/set_link_state' service 'gazebo_msgs.SetLinkState'},
          ServiceServer { name '/gazebo/set_physics_properties' service 'gazebo_msgs.SetPhysicsProperties'},
          ServiceServer { name '/gazebo/spawn_sdf_model' service 'gazebo_msgs.SpawnModel'},
          ServiceServer { name '/gazebo/set_link_properties' service 'gazebo_msgs.SetLinkProperties'},
          ServiceServer { name '/gazebo/set_light_properties' service 'gazebo_msgs.SetLightProperties'},
          ServiceServer { name '/gazebo/set_model_state' service 'gazebo_msgs.SetModelState'},
          ServiceServer { name '/controller_manager/list_controller_types' service 'controller_manager_msgs.ListControllerTypes'},
          ServiceServer { name '/gazebo/unpause_physics' service 'std_srvs.Empty'},
          ServiceServer { name '/controller_manager/reload_controller_libraries' service 'controller_manager_msgs.ReloadControllerLibraries'},
          ServiceServer { name '/battery_monitor_client/battery_demo_model/set_charge_rate' service 'brass_gazebo_battery.SetChargingRate'},
          ServiceServer { name '/gazebo/apply_joint_effort' service 'gazebo_msgs.ApplyJointEffort'},
          ServiceServer { name '/controller_manager/load_controller' service 'controller_manager_msgs.LoadController'},
          ServiceServer { name '/controller_manager/unload_controller' service 'controller_manager_msgs.UnloadController'},
          ServiceServer { name '/gazebo/get_physics_properties' service 'gazebo_msgs.GetPhysicsProperties'},
          ServiceServer { name '/gazebo/delete_model' service 'gazebo_msgs.DeleteModel'},
          ServiceServer { name '/imu/data/set_accel_bias' service 'hector_gazebo_plugins.SetBias'},
          ServiceServer { name '/gazebo/get_link_state' service 'gazebo_msgs.GetLinkState'},
          ServiceServer { name '/gazebo/get_link_properties' service 'gazebo_msgs.GetLinkProperties'},
          ServiceServer { name '/gazebo/spawn_urdf_model' service 'gazebo_msgs.SpawnModel'},
          ServiceServer { name '/imu/data/calibrate' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/get_light_properties' service 'gazebo_msgs.GetLightProperties'},
          ServiceServer { name '/gazebo/get_model_properties' service 'gazebo_msgs.GetModelProperties'},
          ServiceServer { name '/battery_monitor_client/battery_demo_model/set_charging' service 'brass_gazebo_battery.SetCharging'},
          ServiceServer { name '/gazebo/set_joint_properties' service 'gazebo_msgs.SetJointProperties'},
          ServiceServer { name '/gazebo/clear_body_wrenches' service 'gazebo_msgs.BodyRequest'},
          ServiceServer { name '/battery_monitor_client/battery_demo_model/set_model_coefficients' service 'brass_gazebo_battery.SetCoef'},
          ServiceServer { name '/gazebo/pause_physics' service 'std_srvs.Empty'},
          ServiceServer { name '/controller_manager/list_controllers' service 'controller_manager_msgs.ListControllers'},
          ServiceServer { name '/gazebo/reset_world' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/get_model_state' service 'gazebo_msgs.GetModelState'},
          ServiceServer { name '/imu/data/set_rate_bias' service 'hector_gazebo_plugins.SetBias'},
          ServiceServer { name '/imu/data/accel/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo/set_model_configuration' service 'gazebo_msgs.SetModelConfiguration'},
          ServiceServer { name '/gazebo_ros_control/pid_gains/rear_right_wheel/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo_ros_control/pid_gains/rear_left_wheel/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo/reset_simulation' service 'std_srvs.Empty'},
          ServiceServer { name '/gazebo/get_world_properties' service 'gazebo_msgs.GetWorldProperties'},
          ServiceServer { name '/imu/data/rate/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/controller_manager/switch_controller' service 'controller_manager_msgs.SwitchController'},
          ServiceServer { name '/battery_demo_model/set_power_load' service 'brass_gazebo_battery.SetLoad'},
          ServiceServer { name '/gazebo/delete_light' service 'gazebo_msgs.DeleteLight'},
          ServiceServer { name '/gazebo/get_joint_properties' service 'gazebo_msgs.GetJointProperties'},
          ServiceServer { name '/battery_monitor_client/battery_demo_model/set_charge' service 'brass_gazebo_battery.SetCharge'},
          ServiceServer { name '/gazebo/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo/apply_body_wrench' service 'gazebo_msgs.ApplyBodyWrench'},
          ServiceServer { name '/imu/data/yaw/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo_ros_control/pid_gains/front_right_wheel/set_parameters' service 'dynamic_reconfigure.Reconfigure'},
          ServiceServer { name '/gazebo_ros_control/pid_gains/front_left_wheel/set_parameters' service 'dynamic_reconfigure.Reconfigure'}}
        publisher {
          Publisher { name '/mobile_base/commands/charge_level' message 'std_msgs.Float64'},
          Publisher { name '/gazebo_ros_control/pid_gains/front_right_wheel/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/gazebo/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/gazebo_ros_control/pid_gains/rear_right_wheel/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/gazebo_ros_control/pid_gains/rear_right_wheel/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/joint_states' message 'sensor_msgs.JointState'},
          Publisher { name '/ridgeback_velocity_controller/odom' message 'nav_msgs.Odometry'},
          Publisher { name '/imu/data/bias' message 'sensor_msgs.Imu'},
          Publisher { name '/imu/data/yaw/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/odom' message 'nav_msgs.Odometry'},
          Publisher { name '/imu/data/accel/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/gazebo_ros_control/pid_gains/rear_left_wheel/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/gazebo/link_states' message 'gazebo_msgs.LinkStates'},
          Publisher { name '/gazebo_ros_control/pid_gains/front_right_wheel/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/front/scan' message 'sensor_msgs.LaserScan'},
          Publisher { name '/gazebo_ros_control/pid_gains/front_left_wheel/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/gazebo_ros_control/pid_gains/rear_left_wheel/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/gazebo/model_states' message 'gazebo_msgs.ModelStates'},
          Publisher { name '/imu/data/accel/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/imu/data' message 'sensor_msgs.Imu'},
          Publisher { name '/imu/data/rate/parameter_descriptions' message 'dynamic_reconfigure.ConfigDescription'},
          Publisher { name '/mobile_base/commands/charge_level_mwh' message 'std_msgs.Float64'},
          Publisher { name '/gazebo_ros_control/pid_gains/front_left_wheel/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/imu/data/yaw/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/gazebo/parameter_updates' message 'dynamic_reconfigure.Config'},
          Publisher { name '/imu/data/rate/parameter_updates' message 'dynamic_reconfigure.Config'}}
        subscriber {
          Subscriber { name '/gazebo/set_model_state' message 'gazebo_msgs.ModelState'},
          Subscriber { name '/ridgeback_velocity_controller/cmd_vel' message 'geometry_msgs.Twist'},
          Subscriber { name '/cmd_vel' message 'geometry_msgs.Twist'},
          Subscriber { name '/gazebo/set_link_state' message 'gazebo_msgs.LinkState'}}}},
    Artifact parameters_node {
      node Node { name parameters_node

        parameter {
          Parameter { name '/gazebo_ros_control/pid_gains/rear_right_wheel/i' type Double },
          Parameter { name '/ridgeback_velocity_controller/type' type String },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/sensor_frame' type String },
          Parameter { name '/ridgeback_velocity_controller/wheel_separation_multiplier' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/topic' type String },
          Parameter { name '/imu/data/accel/offset' type Double },
          Parameter { name '/gazebo/auto_disable_bodies' type Boolean },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_right_wheel/i_clamp_max' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/raytrace_range' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/max_obstacle_height' type Double },
          Parameter { name '/move_base/recovery_behavior_enabled' type Boolean },
          Parameter { name '/gazebo_ros_control/pid_gains/front_right_wheel/i_clamp_max' type Double },
          Parameter { name '/gazebo/sor_pgs_rms_error_tol' type Double },
          Parameter { name '/ridgeback_velocity_controller/linear/y/has_acceleration_limits' type Boolean },
          Parameter { name '/move_base/global_costmap/obstacles_layer/enabled' type Boolean },
          Parameter { name '/move_base/global_costmap/obstacles_layer/combination_method' type Integer },
          Parameter { name '/move_base/TrajectoryPlannerROS/controller_frequency' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/acc_lim_y' type Double },
          Parameter { name '/imu/data/accel/scale_error' type Double },
          Parameter { name '/move_base/planner_patience' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/footprint_clearing_enabled' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/publish_cost_grid_pc' type Boolean },
          Parameter { name '/imu/data/yaw/drift_frequency' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/raytrace_range' type Double },
          Parameter { name '/ridgeback_velocity_controller/angular/z/has_velocity_limits' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/latch_xy_goal_tolerance' type Boolean },
          Parameter { name '/ekf_localization/odom_frame' type String },
          Parameter { name '/move_base/global_costmap/global_frame' type String },
          Parameter { name '/move_base/global_costmap/obstacles_layer/observation_sources' type String },
          Parameter { name '/gazebo_ros_control/pid_gains/front_right_wheel/d' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/max_obstacle_height' type Double },
          Parameter { name '/ridgeback_velocity_controller/publish_rate' type Integer },
          Parameter { name '/move_base/local_costmap/meter_scoring' type Boolean },
          Parameter { name '/imu/data/accel/drift_frequency' type Double },
          Parameter { name '/ridgeback_velocity_controller/linear/x/has_acceleration_limits' type Boolean },
          Parameter { name '/move_base/global_costmap/transform_tolerance' type Double },
          Parameter { name '/ridgeback_velocity_controller/linear/y/max_velocity' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/min_in_place_vel_theta' type Double },
          Parameter { name '/use_sim_time' type Boolean },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/marking' type Boolean },
          Parameter { name '/move_base/global_costmap/width' type Integer },
          Parameter { name '/move_base/global_costmap/inflater_layer/inflate_unknown' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/vtheta_samples' type Integer },
          Parameter { name '/move_base/TrajectoryPlannerROS/occdist_scale' type Double },
          Parameter { name '/ridgeback_velocity_controller/angular/z/has_acceleration_limits' type Boolean },
          Parameter { name '/move_base/global_costmap/inflater_layer/cost_scaling_factor' type Double },
          Parameter { name '/ekf_localization/two_d_mode' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/oscillation_reset_dist' type Double },
          Parameter { name '/move_base/global_costmap/inflater_layer/inflation_radius' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_left_wheel/i_clamp_min' type Double },
          Parameter { name '/ekf_localization/world_frame' type String },
          Parameter { name '/move_base/controller_frequency' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/min_vel_x' type Double },
          Parameter { name '/move_base/global_costmap/inflater_layer/enabled' type Boolean },
          Parameter { name '/move_base/global_costmap/publish_voxel_map' type Boolean },
          Parameter { name '/move_base/shutdown_costmaps' type Boolean },
          Parameter { name '/imu/data/rate/drift' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/xy_goal_tolerance' type Double },
          Parameter { name '/move_base/global_costmap/origin_z' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/front_right_wheel/i_clamp_min' type Double },
          Parameter { name '/imu/data/yaw/drift' type Double },
          Parameter { name '/move_base/global_costmap/static_map' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/min_vel_theta' type Double },
          Parameter { name '/gazebo/gravity_z' type Double },
          Parameter { name '/imu/data/accel/gaussian_noise' type Double },
          Parameter { name '/ekf_localization/imu0_differential' type Boolean },
          Parameter { name '/move_base/restore_defaults' type Boolean },
          Parameter { name '/gazebo_ros_control/pid_gains/front_left_wheel/i_clamp_max' type Double },
          Parameter { name '/move_base/global_costmap/origin_y' type Double },
          Parameter { name '/move_base/local_costmap/origin_z' type Double },
          Parameter { name '/gazebo/cfm' type Double },
          Parameter { name '/move_base/global_costmap/origin_x' type Double },
          Parameter { name '/ridgeback_velocity_controller/linear/y/has_velocity_limits' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/raytrace_range' type Double },
          Parameter { name '/move_base/global_costmap/footprint' type String },
          Parameter { name '/move_base/TrajectoryPlannerROS/escape_reset_theta' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/heading_scoring_timestep' type Double },
          Parameter { name '/move_base/global_costmap/map_type' type String },
          Parameter { name '/ekf_localization/imu0_config' type List {Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean}},
          Parameter { name '/imu/data/rate/scale_error' type Double },
          Parameter { name '/ridgeback_velocity_controller/back_right_wheel_joint' type String },
          Parameter { name '/move_base/global_costmap/z_voxels' type Integer },
          Parameter { name '/gazebo_ros_control/pid_gains/front_left_wheel/i' type Double },
          Parameter { name '/move_base/global_costmap/robot_radius' type Double },
          Parameter { name '/ridgeback_velocity_controller/angular/z/max_velocity' type Double },
          Parameter { name '/gazebo/sor_pgs_precon_iters' type Integer },
          Parameter { name '/ridgeback_velocity_controller/front_left_wheel_joint' type String },
          Parameter { name '/ridgeback_velocity_controller/twist_covariance_diagonal' type List {Double,Double,Double,Double,Double,Double}},
          Parameter { name '/move_base/global_costmap/robot_base_frame' type String },
          Parameter { name '/gazebo/max_contacts' type Integer },
          Parameter { name '/move_base/TrajectoryPlannerROS/acc_lim_theta' type Double },
          Parameter { name '/move_base/local_costmap/origin_x' type Double },
          Parameter { name '/ekf_localization/imu0' type String },
          Parameter { name '/move_base/global_costmap/obstacle_range' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/front_left_wheel/p' type Double },
          Parameter { name '/move_base/local_costmap/footprint_padding' type Double },
          Parameter { name '/imu/data/yaw/offset' type Double },
          Parameter { name '/move_base/oscillation_distance' type Double },
          Parameter { name '/move_base/local_costmap/height' type Integer },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_left_wheel/antiwindup' type Boolean },
          Parameter { name '/gazebo/contact_surface_layer' type Double },
          Parameter { name '/move_base/local_costmap/update_frequency' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/restore_defaults' type Boolean },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_right_wheel/i_clamp_min' type Double },
          Parameter { name '/gazebo/enable_ros_network' type Boolean },
          Parameter { name '/move_base/global_costmap/resolution' type Double },
          Parameter { name '/ekf_localization/frequency' type Integer },
          Parameter { name '/ridgeback_velocity_controller/linear/x/has_velocity_limits' type Boolean },
          Parameter { name '/move_base/local_costmap/plugins' type Struc {
            'type' String,
            'name' String}},
          Parameter { name '/gazebo_ros_control/pid_gains/rear_left_wheel/d' type Double },
          Parameter { name '/gazebo/gravity_y' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/sim_granularity' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/front_left_wheel/i_clamp_min' type Double },
          Parameter { name '/move_base/local_costmap/robot_radius' type Double },
          Parameter { name '/ekf_localization/odom0_differential' type Boolean },
          Parameter { name '/move_base/global_costmap/publish_frequency' type Double },
          Parameter { name '/move_base/planner_frequency' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/min_obstacle_height' type Double },
          Parameter { name '/move_base/local_costmap/robot_base_frame' type String },
          Parameter { name '/move_base/base_local_planner' type String },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_left_wheel/i' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/obstacle_range' type Double },
          Parameter { name '/move_base/local_costmap/obstacle_range' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/heading_scoring' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/obstacle_range' type Double },
          Parameter { name '/move_base/local_costmap/z_resolution' type Integer },
          Parameter { name '/move_base/TrajectoryPlannerROS/pdist_scale' type Double },
          Parameter { name '/move_base/local_costmap/global_frame' type String },
          Parameter { name '/gazebo_ros_control/pid_gains/front_right_wheel/antiwindup' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/marking' type Boolean },
          Parameter { name '/robot_description' type String },
          Parameter { name '/ridgeback_velocity_controller/wheel_separation_y' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/data_type' type String },
          Parameter { name '/move_base/local_costmap/rolling_window' type Boolean },
          Parameter { name '/ridgeback_velocity_controller/wheel_radius_multiplier' type Double },
          Parameter { name '/imu/data/yaw/scale_error' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/min_obstacle_height' type Double },
          Parameter { name '/imu/data/accel/drift' type Double },
          Parameter { name '/move_base/oscillation_timeout' type Double },
          Parameter { name '/move_base/aggressive_reset/reset_distance' type Double },
          Parameter { name '/move_base/local_costmap/resolution' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/topic' type String },
          Parameter { name '/gazebo/sor_pgs_w' type Double },
          Parameter { name '/move_base/global_costmap/plugins' type Struc {
            'type' String,
            'name' String}},
          Parameter { name '/move_base/local_costmap/publish_frequency' type Double },
          Parameter { name '/ridgeback_velocity_controller/angular/z/max_acceleration' type Double },
          Parameter { name '/gazebo/sor_pgs_iters' type Integer },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/sensor_frame' type String },
          Parameter { name '/move_base/global_costmap/footprint_padding' type Double },
          Parameter { name '/ridgeback_velocity_controller/enable_odom_tf' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/raytrace_range' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/max_obstacle_height' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/escape_reset_dist' type Double },
          Parameter { name '/move_base/clearing_rotation_allowed' type Boolean },
          Parameter { name '/gazebo/contact_max_correcting_vel' type Double },
          Parameter { name '/move_base/conservative_reset_dist' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/dwa' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/enabled' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/combination_method' type Integer },
          Parameter { name '/imu/data/rate/drift_frequency' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_right_wheel/p' type Double },
          Parameter { name '/move_base/conservative_reset/reset_distance' type Double },
          Parameter { name '/gazebo/erp' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/footprint_clearing_enabled' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/max_vel_x' type Double },
          Parameter { name '/move_base/controller_patience' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/heading_lookahead' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/path_distance_bias' type Double },
          Parameter { name '/move_base/max_planning_retries' type Integer },
          Parameter { name '/move_base/local_costmap/obstacles_layer/observation_sources' type String },
          Parameter { name '/move_base/TrajectoryPlannerROS/yaw_goal_tolerance' type Double },
          Parameter { name '/move_base/global_costmap/meter_scoring' type Boolean },
          Parameter { name '/move_base/local_costmap/obstacles_layer/max_obstacle_height' type Double },
          Parameter { name '/move_base/local_costmap/obstacles_layer/scan/clearing' type Boolean },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_right_wheel/d' type Double },
          Parameter { name '/imu/data/yaw/gaussian_noise' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/front_left_wheel/d' type Double },
          Parameter { name '/move_base/local_costmap/transform_tolerance' type Double },
          Parameter { name '/move_base/global_costmap/rolling_window' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/min_vel_y' type Double },
          Parameter { name '/ridgeback_velocity_controller/linear/y/max_acceleration' type Double },
          Parameter { name '/move_base/global_costmap/raytrace_range' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/angular_sim_granularity' type Double },
          Parameter { name '/move_base/local_costmap/width' type Integer },
          Parameter { name '/ridgeback_velocity_controller/pose_covariance_diagonal' type List {Double,Double,Double,Double,Double,Double}},
          Parameter { name '/ridgeback_velocity_controller/wheel_separation_x' type Double },
          Parameter { name '/move_base/local_costmap/inflater_layer/inflate_unknown' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/max_vel_theta' type Double },
          Parameter { name '/move_base/global_costmap/height' type Integer },
          Parameter { name '/gazebo_ros_control/pid_gains/front_right_wheel/p' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_right_wheel/antiwindup' type Boolean },
          Parameter { name '/ridgeback_joint_publisher/type' type String },
          Parameter { name '/gazebo_ros_control/pid_gains/front_left_wheel/antiwindup' type Boolean },
          Parameter { name '/move_base/global_costmap/update_frequency' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/vx_samples' type Integer },
          Parameter { name '/ridgeback_velocity_controller/linear/x/max_acceleration' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/acc_lim_x' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/max_vel_y' type Double },
          Parameter { name '/move_base/local_costmap/inflater_layer/inflation_radius' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/sim_time' type Double },
          Parameter { name '/gazebo/gravity_x' type Double },
          Parameter { name '/move_base/local_costmap/inflater_layer/enabled' type Boolean },
          Parameter { name '/ekf_localization/odom0_config' type List {Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean,Boolean}},
          Parameter { name '/move_base/local_costmap/publish_voxel_map' type Boolean },
          Parameter { name '/move_base/local_costmap/map_type' type String },
          Parameter { name '/move_base/TrajectoryPlannerROS/escape_vel' type Double },
          Parameter { name '/ekf_localization/base_link_frame' type String },
          Parameter { name '/move_base/global_costmap/obstacles_layer/obstacle_range' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/front_right_wheel/i' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/holonomic_robot' type Boolean },
          Parameter { name '/ridgeback_velocity_controller/cmd_vel_timeout' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/simple_attractor' type Boolean },
          Parameter { name '/move_base/local_costmap/static_map' type Boolean },
          Parameter { name '/move_base/TrajectoryPlannerROS/meter_scoring' type Boolean },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_left_wheel/p' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/y_vels' type String },
          Parameter { name '/imu/data/rate/offset' type Double },
          Parameter { name '/move_base/local_costmap/origin_y' type Double },
          Parameter { name '/gazebo_ros_control/pid_gains/rear_left_wheel/i_clamp_max' type Double },
          Parameter { name '/ekf_localization/odom0' type String },
          Parameter { name '/gazebo/time_step' type Double },
          Parameter { name '/move_base/local_costmap/raytrace_range' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/obstacle_range' type Double },
          Parameter { name '/move_base/TrajectoryPlannerROS/goal_distance_bias' type Double },
          Parameter { name '/imu/data/rate/gaussian_noise' type Double },
          Parameter { name '/move_base/global_costmap/z_resolution' type Integer },
          Parameter { name '/ridgeback_velocity_controller/front_right_wheel_joint' type String },
          Parameter { name '/ridgeback_joint_publisher/publish_rate' type Integer },
          Parameter { name '/move_base/local_costmap/footprint' type String },
          Parameter { name '/move_base/TrajectoryPlannerROS/gdist_scale' type Double },
          Parameter { name '/ridgeback_velocity_controller/linear/x/max_velocity' type Double },
          Parameter { name '/move_base/local_costmap/z_voxels' type Integer },
          Parameter { name '/ridgeback_velocity_controller/back_left_wheel_joint' type String },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/data_type' type String },
          Parameter { name '/move_base/local_costmap/inflater_layer/cost_scaling_factor' type Double },
          Parameter { name '/move_base/global_costmap/obstacles_layer/scan/clearing' type Boolean },
          Parameter { name '/gazebo/max_update_rate' type Double },
          Parameter { name '/move_base/base_global_planner' type String }}}}
}}}}